# Build Container
FROM --platform=$BUILDPLATFORM golang:1.19-alpine AS build-env

# Get argment
ARG TOPOLS_VERSION
ARG TARGETARCH

COPY . /workdir
WORKDIR /workdir

RUN apk add --update make curl bash \
    && touch csi/*.go docs/*.md \
    && make build-topols TOPOLS_VERSION=${TOPOLS_VERSION} GOARCH=${TARGETARCH} \
    && make csi-sidecars GOARCH=${TARGETARCH}

# TopoLS container
# can't use buildx with local docker
#FROM --platform=$TARGETPLATFORM ${IMAGE_PREFIX}topols:${TOPOLS_VERSION}
FROM --platform=$TARGETPLATFORM alpine:edge

# TopoLS
COPY --from=build-env /workdir/build/hypertopols /hypertopols
RUN ln -s hypertopols /topols-scheduler \
    && ln -s hypertopols /topols-node \
    && ln -s hypertopols /topols-controller
COPY --from=build-env /workdir/LICENSE /LICENSE

# CSI sidecar
COPY --from=build-env /workdir/build/csi-provisioner /csi-provisioner
COPY --from=build-env /workdir/build/csi-node-driver-registrar /csi-node-driver-registrar
COPY --from=build-env /workdir/build/csi-resizer /csi-resizer
COPY --from=build-env /workdir/build/csi-snapshotter /csi-snapshotter
COPY --from=build-env /workdir/build/livenessprobe /livenessprobe

ENTRYPOINT ["/hypertopols"]
